version: 2.1

jobs:
  build-linux:
    docker:
      - image: cimg/python:3.9  # Use an official CircleCI Python image
    steps:
      - checkout

      # Perform a sparse checkout to get only main.py
      - run:
          name: Sparse Checkout main.py
          command: |
            git sparse-checkout init --cone
            git sparse-checkout set main.py

      # Install dependencies and build the Linux executable
      - run:
          name: Build Linux Executable
          command: |
            pip install pyinstaller pygame
            pyinstaller --onefile main.py

      # Install GHR on Linux
      - run:
          name: Install GHR (Linux)
          command: |
            LATEST_VERSION=$(curl -sSL https://api.github.com/repos/tcnksm/ghr/releases/latest | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
            wget https://github.com/tcnksm/ghr/releases/download/v${LATEST_VERSION}/ghr_v${LATEST_VERSION}_linux_amd64.tar.gz -O ghr_latest.tar.gz
            tar -xzf ghr_latest.tar.gz
            mv ghr_v${LATEST_VERSION}_linux_amd64/ghr ./ghr
            chmod +x ./ghr

      # Upload the Linux build artifact using GHR
      - run:
          name: Upload Linux Release via GHR
          command: |
            RELEASE_TAG=$(date +%s)
            ./ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} $RELEASE_TAG dist/main

  build-windows:
    executor:
      name: windows/default
    steps:
      - checkout

      # Perform a sparse checkout to get only main.py (PowerShell version)
      - run:
          name: Sparse Checkout main.py
          shell: powershell.exe
          command: |
            git sparse-checkout init --cone
            git sparse-checkout set main.py

      # Install dependencies and build the Windows executable
      - run:
          name: Build Windows Executable
          shell: powershell.exe
          command: |
            pip install pyinstaller pygame
            pyinstaller --onefile main.py

      # Install GHR on Windows using curl (since Invoke-WebRequest might be disabled)
      - run:
          name: Install GHR (Windows)
          shell: powershell.exe
          command: |
            $LATEST_VERSION = (curl -sSL https://api.github.com/repos/tcnksm/ghr/releases/latest | ConvertFrom-Json).tag_name
            curl -L "https://github.com/tcnksm/ghr/releases/download/$LATEST_VERSION/ghr_windows_amd64.zip" -o "ghr_latest.zip"
            Expand-Archive -Path "ghr_latest.zip" -DestinationPath "C:\ghr"
            $env:PATH += ";C:\ghr"

      # Upload the Windows build artifact using GHR
      - run:
          name: Upload Windows Release via GHR
          shell: powershell.exe
          command: |
            $RELEASE_TAG = Get-Date -UFormat "%s"
            & "C:\ghr\ghr.exe" -t $env:GITHUB_TOKEN -u $env:CIRCLE_PROJECT_USERNAME -r $env:CIRCLE_PROJECT_REPONAME $RELEASE_TAG "dist\main.exe"

workflows:
  version: 2
  build:
    jobs:
      - build-linux
      - build-windows
