# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

orbs:
  win: circleci/windows@5.1.0

jobs:
  build-linux:
    resource_class: small
    docker:
      - image: cimg/base:current
    steps:
      - checkout

      - run:
          name: "Update APT"
          command: "sudo apt update"

      - run:
          name: "Install pip"
          command: "sudo apt install python3-pip -y"

      - run:
          name: "Install python dependencies"
          command: "pip install -r requirements.txt pyinstaller"

      - run:
          name: "Build application"
          command: "pyinstaller --onefile main.py"

      - run:
          name: "Install GHR v0.17.0"
          command: |
            wget https://github.com/tcnksm/ghr/releases/download/v0.17.0/ghr_v0.17.0_linux_amd64.tar.gz -O ghr_0.17.0.tar.gz
            tar -xzf ghr_0.17.0.tar.gz
            sudo mv ghr_v0.17.0_linux_amd64/ghr /usr/local/bin/
            rm -rf ghr_0.17.0.tar.gz ghr_v0.17.0_linux_amd64

      - run:
          name: "Release Linux Build with GHR"
          command: "ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} $(date +%s) /home/circleci/project/dist/main"

  build-windows:
    executor:
      name: win/default
    steps:
      - checkout

      - run:
          name: "Install python dependencies"
          shell: powershell.exe
          command: |
            pip install -r requirements.txt pyinstaller

      - run:
          name: "Build application"
          shell: powershell.exe
          command: |
            pyinstaller --onefile main.py

      - run:
          name: "Install GHR v0.17.0 and Release Windows Build"
          shell: powershell.exe
          command: |
            # Download GHR v0.17.0 Windows zip using curl.exe
            curl.exe -L "https://github.com/tcnksm/ghr/releases/download/v0.17.0/ghr_v0.17.0_windows_amd64.zip" -o "ghr_0.17.0.zip"
            # Extract the zip archive
            Expand-Archive -Path "ghr_0.17.0.zip" -DestinationPath "C:\ghr" -Force
            # Ensure ghr.exe is in C:\ghr (in case it was extracted into a subfolder)
            if (!(Test-Path "C:\ghr\ghr.exe")) {
                $ghrPath = Get-ChildItem -Path "C:\ghr" -Filter "ghr.exe" -Recurse | Select-Object -First 1
                if ($ghrPath) {
                    Copy-Item -Path $ghrPath.FullName -Destination "C:\ghr\ghr.exe"
                }
            }
            # Add C:\ghr to the PATH
            $env:PATH += ";C:\ghr"
            # Define release tag and artifact path
            $releaseTag = Get-Date -UFormat "%s"
            $distPath = "dist\main.exe"
            # Upload the Windows build artifact using GHR
            C:\ghr\ghr.exe -t $env:GITHUB_TOKEN -u $env:CIRCLE_PROJECT_USERNAME -r $env:CIRCLE_PROJECT_REPONAME $releaseTag $distPath

workflows:
  say-hello-workflow:
    jobs:
      - build-linux
      - build-windows
